{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruns\\\\Desktop\\\\react20\\\\ShoppingCart_api\\\\src\\\\Components\\\\Cart.js\";\nimport React from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button, CardHeader, CardBody, Card, CardFooter, Col, Row } from \"reactstrap\";\n\nconst Cart = ({\n  cartItem,\n  removeItem,\n  buyNow\n}) => {\n  let amount = 0;\n  cartItem.forEach(item => {\n    amount = parseFloat(amount) + parseFloat(item.productPrice);\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Your Cart\"), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, cartItem.map(item => /*#__PURE__*/React.createElement(ListGroupItem, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    height: 80,\n    src: item.tinyImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, item.productName), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"price :- \", item.productPrice), /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: () => removeItem(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Remove\")))))), cartItem.length >= 1 ? /*#__PURE__*/React.createElement(Card, {\n    className: \"text-center mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Grand Total\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Your amount for \", cartItem.length, \" product is \", amount), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: buyNow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"pay here\"))) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Cart is empty\"));\n};\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/aruns/Desktop/react20/ShoppingCart_api/src/Components/Cart.js"],"names":["React","Container","ListGroup","ListGroupItem","Button","CardHeader","CardBody","Card","CardFooter","Col","Row","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","productPrice","map","id","tinyImage","productName","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,IAPF,EAQEC,UARF,EASEC,GATF,EAUEC,GAVF,QAWO,YAXP;;AAaA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA;AAAxB,CAAD,KAAsC;AACjD,MAAIC,MAAM,GAAG,CAAb;AAEAH,EAAAA,QAAQ,CAACI,OAAT,CAAiBC,IAAI,IAAI;AACvBF,IAAAA,MAAM,GAAGG,UAAU,CAACH,MAAD,CAAV,GAAqBG,UAAU,CAACD,IAAI,CAACE,YAAN,CAAxC;AACD,GAFD;AAIA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QAAQ,CAACQ,GAAT,CAAaH,IAAI,iBAChB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,IAAI,CAACI,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,MAAM,EAAE,EAAb;AAAiB,IAAA,GAAG,EAAEJ,IAAI,CAACK,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BL,IAAI,CAACM,WAApC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBN,IAAI,CAACE,YAArB,CAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,MAAMN,UAAU,CAACI,IAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAJF,CADF,CADD,CADH,CAFF,EAqBGL,QAAQ,CAACY,MAAT,IAAmB,CAAnB,gBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBZ,QAAQ,CAACY,MAD5B,kBACgDT,MADhD,CAFF,eAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAED,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CALF,CADD,gBAaC;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlCJ,CADF;AAuCD,CA9CD;;KAAMH,I;AAgDN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  CardHeader,\n  CardBody,\n  Card,\n  CardFooter,\n  Col,\n  Row\n} from \"reactstrap\";\n\nconst Cart = ({ cartItem, removeItem, buyNow }) => {\n  let amount = 0;\n\n  cartItem.forEach(item => {\n    amount = parseFloat(amount) + parseFloat(item.productPrice);\n  });\n\n  return (\n    <Container fluid>\n      <h1 className=\"text-success\">Your Cart</h1>\n      <ListGroup>\n        {cartItem.map(item => (\n          <ListGroupItem key={item.id}>\n            <Row>\n              <Col>\n                <img height={80} src={item.tinyImage} />\n              </Col>\n              <Col className=\"text-center\">\n                <div className=\"text-primary\">{item.productName}</div>\n                <span>price :- {item.productPrice}</span>\n                <Button color=\"danger\" onClick={() => removeItem(item)}>\n                  Remove\n                </Button>\n              </Col>\n            </Row>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n      {/* If everything is empty */}\n      {cartItem.length >= 1 ? (\n        <Card className=\"text-center mt-3\">\n          <CardHeader>Grand Total</CardHeader>\n          <CardBody>\n            Your amount for {cartItem.length} product is {amount}\n          </CardBody>\n          <CardFooter>\n            <Button color=\"success\" onClick={buyNow}>\n              pay here\n            </Button>\n          </CardFooter>\n        </Card>\n      ) : (\n        <h1 className=\"text-warning\">Cart is empty</h1>\n      )}\n    </Container>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}